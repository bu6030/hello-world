server:
  port: 8082
  servlet:
    context-path: /hello-world-new

test.properties.value:
  a: 我是a
  b: 我是b
  a1: 我是a1
  b1: 我是b1
  test-a: 我是test-a

management:
  # SpringBoot后期版本要求和服务不能是同一个端口，如果端口相同则起不来
  server.port: 8081
  security:
    enabled: false
  # 可以指定暴露哪些actuator服务，'*'为全部，注意加上引号，被注释的写法表示只允许health，info
  endpoints:
    web:
      exposure:
        #include: health,info
        include: '*'
  endpoint:
    health:
      # 表示health的内容显示的更加详细内容，不光只status
      show-details: always
  info: # 显示任意的应用信息，默认关闭，如果是更低一些的版本默认是开启的
    env:
      enabled: true
# 自定义/actuator/info中的各种内容，可以自定义，也可以取默认的一些系统/服务环境变量
info:
  app:
    encoding: "@project.build.sourceEncoding@"
    java:
      source: "@java.version@"
      target: "@java.version@"
  build:
    artifact: @project.artifactId@
    name: @project.name@
    description: @project.description@
    pomVersion: @project.version@
    # 甚至可以自定义test
    test: 'ddfff'

spring:
  # 解决swagger3在新版本Springboot中无法展示的问题
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  cache:
    type: ehcache
    config: classpath:ehcache.xml
  #  datasource:
  #    url:
  #    username:
  #    password:
  #    driver-class-name: com.mysql.cj.jdbc.Driver
  datasource:
    driver-class-name: org.sqlite.JDBC
    url: jdbc:sqlite:/Users/XuesongBu/Documents/git_code/hello-world/hello-world.db
    username:
    password:
  jpa:
    database-platform: com.enigmabridge.hibernate.dialect.SQLiteDialect
#  rabbitmq:
#    addresses: 修改为自己RabbitMQ服务器地址
#    username: 修改为自己的RabbitMQ账号
#    password: 修改为自己的RabbitMQ密码
#    virtual-host: 修改为自己的RabbitMQ的virtual-host
#  kafka:
#    bootstrap-servers: 修改为自己Kafka服务器地址
#    consumer:
#      group-id: kafka-demo-kafka-group
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer #关键字的序列化类
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer #值的序列化类
#      properties: #账号密码配置
#        sasl.mechanism: PLAIN
#        security.protocol: SASL_PLAINTEXT
#        sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="消费者账号" password="密码";
#    producer:
#      group-id: kafka-demo-kafka-group
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer #关键字的序列化类
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer #值的序列化类
#      properties: #账号密码配置
#        session.timeout.ms: 15000
#        sasl.mechanism: PLAIN
#        security.protocol: SASL_PLAINTEXT
#        sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="生产者账号" password="密码";